FROM php:8.1-fpm

MAINTAINER Clement Yuan <spyworldxp@gmail.com>

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update && apt-get install -y \
		wget \
		unzip \
		libbz2-dev \
		libcurl4-openssl-dev \
		libxml2-dev \
		libldap2-dev \
		zlib1g-dev \
		libpng-dev \
		unixodbc-dev \
		firebird-dev \
		libpq-dev \
		libsqlite3-dev \
		libpspell-dev \
		libedit-dev \
		libsnmp-dev \
		libtidy-dev \
		libc-client2007e-dev \
		libkrb5-dev \
		freetds-dev \
		libenchant-2-dev \
		libgmp-dev \
		libonig-dev \
		libxslt1-dev \
		libzip-dev \
		libsodium-dev \
		libwebp-dev \
		libjpeg62-turbo-dev \
		libfreetype6-dev \
		libxpm-dev \
		libmagickwand-dev \
		libmemcached-dev \
		libmcrypt-dev \
		libargon2-dev
		# libssl-dev \
		# libgmp3-dev \
		# libicu-dev \
		# librecode-dev \
		# curl \
		# snmp \
		# libaio1 \
		# libmemcached-dev \
		# poppler-utils \
		# ghostscript \


RUN ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h

RUN docker-php-source extract
RUN docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu
RUN docker-php-ext-install ldap
RUN docker-php-ext-configure pdo_odbc  --with-pdo-odbc=unixODBC,/usr/
RUN docker-php-ext-install pdo_odbc
RUN docker-php-ext-configure imap --with-imap --with-imap-ssl --with-kerberos
RUN docker-php-ext-install imap
RUN docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu
RUN docker-php-ext-install pdo_dblib
RUN docker-php-ext-configure gd \
      --disable-gd-jis-conv --with-freetype=/usr --with-jpeg=/usr --with-webp=/usr   --with-xpm=/usr
RUN docker-php-ext-install gd

RUN docker-php-ext-install bcmath bz2 calendar ctype curl dba dl_test dom \
	enchant exif ffi fileinfo filter ftp gettext gmp iconv imap mbstring \
	mysqli opcache pcntl pdo pdo_firebird pdo_mysql \
	pdo_pgsql pdo_sqlite pgsql phar posix pspell session shmop simplexml \
	snmp soap sockets sodium sysvmsg sysvsem sysvshm tidy xml \
	xmlwriter xsl zend_test zip intl

# docker-php-ext-install readline reflection spl standard xmlreader hash  json tokenizer

RUN curl -O https://raw.githubusercontent.com/davidgaya/docker-apache-php-oci/master/instantclient-basic-linux.x64-12.1.0.2.0.zip
RUN curl -O https://raw.githubusercontent.com/davidgaya/docker-apache-php-oci/master/instantclient-sdk-linux.x64-12.1.0.2.0.zip
RUN curl -O https://raw.githubusercontent.com/davidgaya/docker-apache-php-oci/master/instantclient-sqlplus-linux.x64-12.1.0.2.0.zip

RUN unzip instantclient-basic-linux.x64-12.1.0.2.0.zip -d /usr/local/
RUN unzip instantclient-sdk-linux.x64-12.1.0.2.0.zip -d /usr/local/
RUN unzip instantclient-sqlplus-linux.x64-12.1.0.2.0.zip -d /usr/local/

RUN rm instantclient-basic-linux.x64-12.1.0.2.0.zip
RUN rm instantclient-sdk-linux.x64-12.1.0.2.0.zip
RUN rm instantclient-sqlplus-linux.x64-12.1.0.2.0.zip

RUN ln -s /usr/local/instantclient_12_1 /usr/local/instantclient
RUN ln -s /usr/local/instantclient/libclntsh.so.12.1 /usr/local/instantclient/libclntsh.so
RUN ln -s /usr/local/instantclient/sqlplus /usr/bin/sqlplus
RUN docker-php-ext-configure oci8 --with-oci8=instantclient,/usr/local/instantclient

RUN docker-php-ext-install oci8

RUN docker-php-ext-configure pdo_oci --with-pdo-oci=instantclient,/usr/local/instantclient/,12.1
RUN docker-php-ext-install pdo_oci

# RUN sh -c "echo /usr/local/instantclient > /etc/ld.so.conf.d/oracle.conf"
# RUN ldconfig

RUN set -x \
    && cd /usr/src/php/ext/odbc \
    && phpize \
    && sed -ri 's@^ *test +"\$PHP_.*" *= *"no" *&& *PHP_.*=yes *$@#&@g' configure \
    && ./configure --with-unixODBC=shared,/usr \
    && docker-php-ext-install odbc

# RUN ln -s /usr/include /usr/local/incl \
# && docker-php-ext-configure odbc --with-unixODBC=shared,/usr \
# && docker-php-ext-install odbc

# filter reflection spl standard xmlreader
#
# 		libfreetype6-dev \
# 		zip \
#       git \
#       libmemcached-dev \
#       libmysqlclient18 \

RUN pecl install xdebug \
    && echo "zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)" > /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.mode=debug" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.client_host=dockerhost" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.start_with_request=trigger" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.idekey=PHPSTORM" >> /usr/local/etc/php/conf.d/xdebug.ini \
    && echo "xdebug.output_dir=/tmp/xdebug" >> /usr/local/etc/php/conf.d/xdebug.ini

# for confirmation
RUN cat /usr/local/etc/php/conf.d/xdebug.ini
RUN php -i | grep xdebug.remote

RUN pecl install pcov

RUN pecl install imagick && docker-php-ext-enable imagick

RUN pecl install memcached && docker-php-ext-enable memcached

RUN pecl install redis && docker-php-ext-enable redis

RUN pecl install mongodb && docker-php-ext-enable mongodb

RUN pecl install mcrypt && docker-php-ext-enable mcrypt

RUN curl -L https://cs.symfony.com/download/php-cs-fixer-v2.phar -o /usr/local/bin/php-cs-fixer

RUN chmod a+x /usr/local/bin/php-cs-fixer

RUN curl -sS https://getcomposer.org/installer | php -- --filename=composer --install-dir=/bin

ENV PATH /root/.composer/vendor/bin:$PATH

RUN mkdir /.composer

RUN chmod 777 /.composer

ENV LD_LIBRARY_PATH /usr/local/instantclient_12_1/

RUN curl https://phar.phpunit.de/phpunit.phar -L > phpunit.phar && chmod +x phpunit.phar && mv phpunit.phar /usr/local/bin/phpunit

RUN apt-get autoremove -y \
 	&& apt-get clean all \
 	&& rm -rf /var/lib/apt/lists/* \
 	&& rm -rf /usr/share/doc /usr/share/man /usr/share/locale \
 	&& rm -rf /usr/src/php \
 	&& rm -rf /tmp/pear

RUN { \
		echo 'opcache.memory_consumption=128'; \
		echo 'opcache.interned_strings_buffer=8'; \
		echo 'opcache.max_accelerated_files=4000'; \
		echo 'opcache.revalidate_freq=2'; \
		echo 'opcache.fast_shutdown=1'; \
		echo 'opcache.enable_cli=1'; \
	} > /usr/local/etc/php/conf.d/opcache-recommended.ini

EXPOSE 9000
CMD ["php-fpm"]
